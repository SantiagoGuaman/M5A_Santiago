
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSOperaciones", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSOperaciones {


    /**
     * 
     * @param password
     * @param user
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://ws/", className = "ws.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://ws/", className = "ws.LoginResponse")
    @Action(input = "http://ws/WSOperaciones/loginRequest", output = "http://ws/WSOperaciones/loginResponse")
    public Boolean login(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param cliente
     * @return
     *     returns ws.Cliente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://ws/", className = "ws.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://ws/", className = "ws.RegisterResponse")
    @Action(input = "http://ws/WSOperaciones/registerRequest", output = "http://ws/WSOperaciones/registerResponse")
    public Cliente register(
        @WebParam(name = "cliente", targetNamespace = "")
        Cliente cliente);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "cargarClientes", targetNamespace = "http://ws/", className = "ws.CargarClientes")
    @ResponseWrapper(localName = "cargarClientesResponse", targetNamespace = "http://ws/", className = "ws.CargarClientesResponse")
    @Action(input = "http://ws/WSOperaciones/cargarClientesRequest", output = "http://ws/WSOperaciones/cargarClientesResponse")
    public void cargarClientes();

    /**
     * 
     * @param user
     * @param cash
     * @return
     *     returns ws.Cliente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retiro", targetNamespace = "http://ws/", className = "ws.Retiro")
    @ResponseWrapper(localName = "retiroResponse", targetNamespace = "http://ws/", className = "ws.RetiroResponse")
    @Action(input = "http://ws/WSOperaciones/retiroRequest", output = "http://ws/WSOperaciones/retiroResponse")
    public Cliente retiro(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "cash", targetNamespace = "")
        Double cash);

    /**
     * 
     * @param user
     * @return
     *     returns ws.Cliente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "foundCliente", targetNamespace = "http://ws/", className = "ws.FoundCliente")
    @ResponseWrapper(localName = "foundClienteResponse", targetNamespace = "http://ws/", className = "ws.FoundClienteResponse")
    @Action(input = "http://ws/WSOperaciones/foundClienteRequest", output = "http://ws/WSOperaciones/foundClienteResponse")
    public Cliente foundCliente(
        @WebParam(name = "user", targetNamespace = "")
        String user);

    /**
     * 
     * @param user
     * @param cash
     * @return
     *     returns ws.Cliente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deposito", targetNamespace = "http://ws/", className = "ws.Deposito")
    @ResponseWrapper(localName = "depositoResponse", targetNamespace = "http://ws/", className = "ws.DepositoResponse")
    @Action(input = "http://ws/WSOperaciones/depositoRequest", output = "http://ws/WSOperaciones/depositoResponse")
    public Cliente deposito(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "cash", targetNamespace = "")
        Double cash);

}
